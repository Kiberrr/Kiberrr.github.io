[{"title":"零基础web安全渗透测试第一天","url":"/2023/03/07/web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B9%8BWeb%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80/","content":"第一章 Web安全基础HTML 入门HTML（ HyperText Markup Language）即超文本标记语言，是用来构建网页的一种语言。\nHTML是一整套标记标签构成的标记语言，而非编程语言。\nHTML用于承载网页的内容（文本、图片、语音、视频）。\n通俗的讲:使用HTML标记标签与纯文本按规则构建的文档，通常也称为网页。\nHTML网页结构HTML版本声明标签\n它不是 HTML 标签，而是指示web 浏览器关于页面使用哪个HTML 版本进行编写的指令。\nHTML头部部分标签  \n涉及页面标题、字符集、样式、链接等内容\n \n\n页面标题必须存在\n \n\n为所有链接指定默认地址\n \n\n定义文档与外部资源之间的关系\n \n\n定义样式信息\n\n 定义客户端脚本，比如 JavaScript\n\n 定义关于 HTML 文档的元数据，用\n\n于规定页面的描述、关键词、文档\n\n的作者等。搜索引擎引擎会利meta \n\n元素的 name 和 content 属性来索\n\n引页面。\n\n#### HTML主体部分\n\n标签\n\n浏览器展现给用户的内容，包括标题、文本、段落、\n\n链接、图片、媒体等，所有的页面内容都由HTML主\n\n体部分标签来实现。\n\nhello \n\n标识一个段落\n\ntext 标识一个链接文本\n\n \n\n列表项相关\n\n 表格项相关\n \n\n标识一个图片信息\n\n \n\n字体相关标签\n\n \n\n表单相关标签\n\n标签之间可按照规则嵌套。\n\n## CSS入门\n\n层叠样式表（英文全称：Cascading Style Sheets）是一种用来表现HTML（标准通用标记语言的一个应用）或XML（标准通用标记语言的一个子集）等文件样式的计算机语言。CSS 能够对网页中元素位置的排版进行像素级精确控制，支持几乎所有的字体字号样式，拥有对网页对象和模型样式编辑的能力。\n\n## JavaScript 入门\n\nJavaScript，是可插入 HTML 页面，可以由绝大多数现代浏览器执行的轻量级的编程语言。JavaScript 基于原型编程、多范式的动态脚本语言，并且支持面向对象、命令式和声明式（如函数式编程）风格。\n\n### 引发的漏洞\n\nXSS 攻击，文件上传漏洞，常年占据 OWASP Top10。\n\n## Web App\n\nWeb App（或Web应用程序）运行于网络和标准浏览器上，基于网页技术开发实现特定功能的应用。\n\n前端：HTML，CSS，JavaScript\n\n后端：Java，Python，PHP\n\n数据库：MySQL，Oracle，MongoDB\n\n容器：Windows(IIS)，Linux(Nginx, Apache)\n\n协议：TCP，DNS，HTTP，HTTPS\n\n### 常见的 Web 服务器\n\nApache HTTP Server（简称Apache）是Apache软件基金会的一个开放源代码的网页服务器软件，可以在大多数电脑操作系统中运行，由于其跨平台和安全性被广泛使用，是最流行的Web服务器软件之一。\n\nNginx（发音同engine x）是一个网页服务器，它能反向代理HTTP, HTTPS, SMTP, POP3, IMAP的协议链接，以及一个负载均衡器和一个HTTP缓存。Nginx是一款面向性能设计的HTTP服务器，相较于Apache、lighttpd具有占有内存少，稳定性高等优势。\n\nIIS是Internet Information Server的缩写。它是微软公司主推的服务器。\n\nLighttpd是一个德国人领导的开源Web服务器软件,具有非常低的内存开销、CPU占用率低、效能好以及丰富的模块等特点。\n\nTomcat是Apache软件基金会的Jakarta项目中的一个核心项目，由Apache、Sun和其他一些公司及个人共同开发而成。Tomcat技术先进、性能稳定，而且免费，因而深受Java爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web应用服务器。\n\n## 框架\n\nWeb应用框架（Web application framework）是一种开发框架，用来支持动态网站、网络应用程序及网络服务\n\n的开发。其类型有基于请求的和基于组件的两种框架。有助于减轻网页开发时共通性活动的工作负荷，例如许多\n\n框架提供数据库访问接口、标准样板以及会话管理等，可提升代码的可再用性。\n\n#### 前端框架\n\njQuery  Bootstrap  React.js  Vue.js\n\n#### 后端框架\n\nSpring MVC  Django  Flask  Tornado\n\n## 协议基础 \n\nHTTP协议定义了Web客户端如何从Web服务器请求Web页面，以及服务器如何把Web页面传送给客户端。\n\n### HTTP协议工作流程\n\n•客户端连接到Web服务器\n\n一个HTTP客户端，通常是浏览器，与Web服务器的HTTP端口（默认为80）建立一个TCP套接字连接。\n\n• 发送HTTP请求\n\n通过TCP套接字，客户端向Web服务器发送一个文本的请求报文，一个请求报文由请求行、请求头部、空行和请求数据 4部分组成。\n\n• 服务器接受请求并返回HTTP响应\n\nWeb服务器解析请求，定位请求资源。服务器将资源复本写到TCP套接字，由客户端读取。一个响应由状态行、响应头部、空行（请求空行）和响应数据（请求体）4部分组成。\n\n• 释放连接TCP连接\n\n若connection 模式为close，则服务器主动关闭TCP连接，客户端被动关闭连接，释放TCP连接。\n\n若connection 模式为keepalive，则该连接会保持一段时间，在该时间内可以继续接收请求。\n\n• 客户端浏览器解析HTML内容\n\n### HTTP协议 – GET vs POST\n\n•从参数的传递方面来看,GET请求的参数是直接拼接在地址栏URL的后面,而POST请求的参数是放到请求体里面的。\n\n•从长度限制方面来看,GET请求有具体的长度限制,一般不超过1024KB,而POST理论上没有,但是浏览器一般有个界限。\n\n•从安全方面来看,GET请求相较于POST,因为数据都是明文显示在URL上面的,所以安全和私密性不如POST。从本质上来说，GET和POST都是TCP连接，并无实质的区别。但是由于HTTP/浏览器的限定，导致它们在应用过程中体现出了一些不同。GET产生一个数据包，POST产生两个数据包。对于GET请求，浏览器会把\n\nhttp header 和 data 一并发出去,服务器响应200(返回数据)。而对于POST，浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200 ok。\n\n### HTTP请求响应代码\n\n#### HTTP 状态码分类\n\n| 1**  | 信息，服务器收到请求，需要请求者继续执行操作   |\n| ---- | ---------------------------------------------- |\n| 2**  | 成功，操作被成功接收并处理                     |\n| 3**  | 重定向，需要进一步的操作以完成请求             |\n| 4**  | 客户端错误，请求包含语法错误或无法完成请求     |\n| 5**  | 服务器错误，服务器在处理请求的过程中发生了错误 |\n\n#### 常见的 HTTP 状态码：\n\n- 200 - 请求成功\n- 301 - 资源（网页等）被永久转移到其它URL\n- 404 - 请求的资源（网页等）不存在\n- 500 - 内部服务器错误\n\n## Web安全攻防要点\n\n![image-20230310085907950](C:\\Users\\Administrator\\AppData\\Roaming\\Typora\\typora-user-images\\image-20230310085907950.png)\n","tags":["web安全渗透"]}]